
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login-register-reset</title>
  <!-- Bootstrap 5 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap 5 Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">
  <!-- Bootstrap JS and dependencies (Popper.js included in Bootstrap 5) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    .login-container {
      max-width: 400px;
      margin: 100px auto;
      padding: 15px;
      background-color: #f7f7f7;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    .login-title {
      text-align: center;
      margin-bottom: 20px;
    }
    .password-field {
            position: relative;
        }
    .toggle-password {
            position: absolute;
            right: 10px;
            top: 70%;
            transform: translateY(-50%);
            cursor: pointer;
        }
  </style>
</head>
<body>


  <!-- Trigger button for Login Modal (Hidden by default) -->
  <button type="button" class="btn btn-primary d-none" id="openLoginModal" data-bs-toggle="modal" data-bs-target="#authModal">
    Open Login Modal
  </button>

  <!-- Authentication Modal -->
  <div class="modal fade" id="authModal" tabindex="-1" aria-labelledby="authModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="authModalLabel">Login</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">

          <!-- Login Form -->
          <div id="loginForm">
            <div class="mb-3">
              <label for="loginEmail" class="form-label">Email address</label>
              <input type="email" class="form-control" id="loginEmail" placeholder="Enter email">
            </div>
            <div class="mb-3 password-field" >
              <label for="loginPassword" class="form-label">Password</label>
              <input type="password" class="form-control" id="loginPassword" placeholder="Password">
              <i class="toggle-password bi bi-eye" id="toggleLoginPassword" onclick="toggleLoginPasswordVisibility('loginPassword', 'toggleLoginPassword')"></i>
            </div>
            <div class="error-message  text-danger" id="loginError"></div>
            <br>
            <div class="d-flex justify-content-between">
              <button class="btn btn-primary" onclick="handleLogin()">Login</button>
              <a href="#" onclick="showForgotPassword()">Forgot Password?</a>
            </div>
            <p class="mt-3">Don't have an account? <a href="#" onclick="showRegister()">Register</a></p>
          </div>

          <!-- Register Form -->
          <div id="registerForm" style="display: none;">
            <div class="mb-3">
              <label for="registerEmail" class="form-label">Email address</label>
              <input type="email" class="form-control" id="registerEmail" placeholder="Enter email">
            </div>
            <div class="mb-3 password-field">
              <label for="registerPassword" class="form-label">Password</label>
              <input type="password" class="form-control" id="registerPassword" placeholder="Enter password">
              <i class="toggle-password bi bi-eye" id="toggleRegisterPassword" onclick="toggleRegisterPasswordVisibility('registerPassword', 'toggleRegisterPassword')"></i>
            </div>
            <div class="error-message text-danger" id="registerError"></div>
            <div class="d-flex justify-content-between">
              <button class="btn btn-success" onclick="handleRegister()">Register</button>
              <a href="#" onclick="showLogin()">Back to Login</a>
            </div>
          </div>

          <!-- Forgot Password Form -->
          <div id="forgotPasswordForm" style="display: none;">
            <div class="mb-3">
              <label for="forgotPasswordEmail" class="form-label">Email address</label>
              <input type="email" class="form-control" id="forgotPasswordEmail" placeholder="Enter email">
            </div>
            <div class="error-message text-danger" id="forgotPasswordError"></div>
            <br>
            <div class="d-flex justify-content-between">
              <button class="btn btn-warning" onclick="handleResetPassword()">Reset Password</button>
              <a href="#" onclick="showLogin()">Back to Login</a>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>



  <script>
    const BaseUrl = "<%= process.env.BASE_PATH %>";
  </script>

<script>
  //show message on screen if message in url query
  document.addEventListener('DOMContentLoaded', function () {
    // Get the token from the URL query parameters
    const urlParams = new URLSearchParams(window.location.search);
    const message = urlParams.get('message');
    if(message != ''){
      document.getElementById('loginError').innerText = message;
    }

  })

  // Show Register Form
  function showRegister() {
    document.getElementById('loginForm').style.display = 'none';
    document.getElementById('registerForm').style.display = 'block';
    document.getElementById('forgotPasswordForm').style.display = 'none';
    document.getElementById('authModalLabel').innerText = 'Register';
    clearErrors();
  }

  // Show Forgot Password Form
  function showForgotPassword() {
    document.getElementById('loginForm').style.display = 'none';
    document.getElementById('registerForm').style.display = 'none';
    document.getElementById('forgotPasswordForm').style.display = 'block';
    document.getElementById('authModalLabel').innerText = 'Forgot Password';
    clearErrors();
  }

  // Show Login Form
  function showLogin() {
    document.getElementById('loginForm').style.display = 'block';
    document.getElementById('registerForm').style.display = 'none';
    document.getElementById('forgotPasswordForm').style.display = 'none';
    document.getElementById('authModalLabel').innerText = 'Login';
    clearErrors();
  }

  // handle login
  async function handleLogin() {
            const url = '/auth/login'; // Replace with your API URL
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            const credentials = {
              username: email,
              password, password
            }

            try {
                // Make API call using fetch
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(credentials)
                });

                // Wait for JSON response
                const data = await response.json();

                // Check for successful response (status 200)
                if (response.ok) {
                    // Refresh the page on success
                    window.location.reload();
                } else {
                    // Alert the response message if status is not 200
                    //alert(`Login failed: ${data.message}`);
                    document.getElementById('loginError').innerText = data.message;

                }
            } catch (error) {
                // Handle any other errors (like network issues)
                alert(`An error occurred: ${error.message}`);
            }
        }

        document.getElementById('loginForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent form from submitting the traditional way

           // Call the login function and wait for completion
            await handleLogin();
        });

  // Handle Register
  async function handleRegister() {
            const url = '/auth/register'; // Replace with your API URL
            const email = document.getElementById('registerEmail').value;
            const password = document.getElementById('registerPassword').value;
            const credentials = {
              username: email,
              password, password
            }

            try {
                // Make API call using fetch
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(credentials)
                });

                // Wait for JSON response
                const data = await response.json();

                // Check for successful response (status 200)
                if (response.ok) {
                    // Refresh the page on success
                    document.getElementById('registerError').innerText = "A verification email is sent. Follow instructions to validate";
                } else {
                    // Alert the response message if status is not 200
                    //alert(`Login failed: ${data.message}`);
                    document.getElementById('registerError').innerText = data.message;

                }
            } catch (error) {
                // Handle any other errors (like network issues)
                alert(`An error occurred: ${error.message}`);
            }
        }

        document.getElementById('registerForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent form from submitting the traditional way

           // Call the login function and wait for completion
            await handleRegister();
        });

  // Handle Reset Password
  async function handleResetPassword() {
    const url = '/auth/forgot-password'; // Replace with your API URL
            const email = document.getElementById('forgotPasswordEmail').value;
            const credentials = {
              username: email,
            }

            try {
                // Make API call using fetch
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(credentials)
                });

                // Wait for JSON response
                const data = await response.json();

                // Check for successful response (status 200)
                if (response.ok) {
                    // Refresh the page on success
                    document.getElementById('forgotPasswordError').innerText = data.message;
                } else {
                    // Alert the response message if status is not 200
                    //alert(`Login failed: ${data.message}`);
                    document.getElementById('forgotPasswordError').innerText = data.message;

                }
            } catch (error) {
                // Handle any other errors (like network issues)
                alert(`An error occurred: ${error.message}`);
            }
  }

  document.getElementById('forgotPasswordForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent form from submitting the traditional way

           // Call the login function and wait for completion
            await handleResetPassword();
        });


  // Clear error messages
  function clearErrors() {
    document.getElementById('loginError').innerText = '';
    document.getElementById('registerError').innerText = '';
    document.getElementById('forgotPasswordError').innerText = '';
  }

  // Add event listeners for Enter key
  document.getElementById('loginEmail').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      handleLogin();
    }
  });
  
  document.getElementById('loginPassword').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      handleLogin();
    }
  });
  
  document.getElementById('registerEmail').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      handleRegister();
    }
  });

  document.getElementById('registerPassword').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      handleRegister();
    }
  });

  document.getElementById('forgotPasswordEmail').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      handleResetPassword();
    }
  });


  // Show Login Modal by default
  document.addEventListener('DOMContentLoaded', function () {
    new bootstrap.Modal(document.getElementById('authModal')).show();
  });


  // Toggle password visibility function
function toggleLoginPasswordVisibility(passwordFieldId, toggleIconId) {
    const passwordField = document.getElementById(passwordFieldId);
    const toggleIcon = document.getElementById(toggleIconId);

    // Toggle between text and password type
    if (passwordField.type === "password") {
        passwordField.type = "text";
        toggleIcon.classList.remove('bi-eye');
        toggleIcon.classList.add('bi-eye-slash');
    } else {
        passwordField.type = "password";
        toggleIcon.classList.remove('bi-eye-slash');
        toggleIcon.classList.add('bi-eye');
    }
}

  // Toggle password visibility function
  function toggleRegisterPasswordVisibility(passwordFieldId, toggleIconId) {
    const passwordField = document.getElementById(passwordFieldId);
    const toggleIcon = document.getElementById(toggleIconId);

    // Toggle between text and password type
    if (passwordField.type === "password") {
        passwordField.type = "text";
        toggleIcon.classList.remove('bi-eye');
        toggleIcon.classList.add('bi-eye-slash');
    } else {
        passwordField.type = "password";
        toggleIcon.classList.remove('bi-eye-slash');
        toggleIcon.classList.add('bi-eye');
    }
}

</script>


</body>
</html>
